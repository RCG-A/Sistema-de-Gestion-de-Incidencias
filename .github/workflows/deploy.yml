name: Deploy Web1 Frontend

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: [ self-hosted, oci, web1 ]
    env:
      RELEASES_DIR: /srv/web1/releases
      CURRENT_LINK: /srv/web1/current
      SERVICE: web1
      HOSTS: ${{ secrets.HOST2 }}           # ← SOLO nodo2 por ahora
      SSH_USER: ${{ secrets.SSH_USER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install & build (Vite)
        run: |
          npm ci
          npm run build     # debe crear ./dist

      - name: Pack artifact
        run: |
          TS=$(date +%Y%m%d%H%M%S)
          echo "TS=$TS" >> $GITHUB_ENV
          tar -C dist -czf web1-$TS.tar.gz .
          ls -lh web1-$TS.tar.gz

      - name: Prepare SSH key
        run: |
          install -m 600 /dev/null ~/.ssh/id_ed25519
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          for H in $HOSTS; do ssh-keyscan -H $H >> ~/.ssh/known_hosts 2>/dev/null || true; done

      - name: Upload & activate release
        run: |
          for H in $HOSTS; do
            echo ">>> Deploy en $H"
            ssh -i ~/.ssh/id_ed25519 ${SSH_USER}@$H "sudo mkdir -p $RELEASES_DIR/${TS} && sudo chown -R www-data:www-data $RELEASES_DIR"
            scp -i ~/.ssh/id_ed25519 web1-${TS}.tar.gz ${SSH_USER}@$H:/tmp/
            ssh -i ~/.ssh/id_ed25519 ${SSH_USER}@$H "\
              sudo tar -xzf /tmp/web1-${TS}.tar.gz -C $RELEASES_DIR/${TS} && \
              sudo chown -R www-data:www-data $RELEASES_DIR/${TS} && \
              sudo ln -sfn $RELEASES_DIR/${TS} $CURRENT_LINK && \
              sudo systemctl restart ${SERVICE} && \
              sleep 2 && \
              curl -fsS http://127.0.0.1:5173/ >/dev/null \
            " || { echo 'FALLO en deploy frontend'; exit 1; }
          done
